/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.78
 * Generated at: 2023-08-20 16:56:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class home_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"ko\">\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"utf-8\">\n");
      out.write("    <title>Home</title>\n");
      out.write("    <script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write(" <h1>Home</h1>\n");
      out.write("\n");
      out.write("    <h2>로그인</h2>\n");
      out.write("    <form id=\"loginForm\">\n");
      out.write("        <label for=\"username\">아이디:</label>\n");
      out.write("        <input type=\"text\" id=\"username\" name=\"username\" required><br><br>\n");
      out.write("        <label for=\"password\">비밀번호:</label>\n");
      out.write("        <input type=\"password\" id=\"password\" name=\"password\" required><br><br>\n");
      out.write("        <button=\"submit\">로그인</button>\n");
      out.write("    </form>\n");
      out.write("    <div id=\"loginResult\"></div>\n");
      out.write("\n");
      out.write("    <hr>\n");
      out.write("\n");
      out.write("    <h2>회원가입</h2>\n");
      out.write("    <form id=\"signup\">\n");
      out.write("        <label for=\"signupUsername\">아이디:</label>\n");
      out.write("        <input type=\"text\" id=\"signupUsername\" name=\"signupUsername\" required><br><br>\n");
      out.write("        <label for=\"signupPassword\">비밀번호:</label>\n");
      out.write("        <input type=\"password\" id=\"signupPassword\" name=\"signupassword\" required><br><br>\n");
      out.write("        <button type=\"submit\">회원가입</button>\n");
      out.write("    </form>\n");
      out.write("    <div id=\"signupResult\"></div>\n");
      out.write("\n");
      out.write("    <hr>\n");
      out.write("\n");
      out.write("    <h2>댓글 등록</h2>\n");
      out.write("    <form id=\"commentForm\">\n");
      out.write("        <label for=\"boardId\">게시글 ID:</label>\n");
      out.write("        <input type=\"number\" id=\"boardId\" name=\"boardId\" required><br><br>\n");
      out.write("        <label for=\"content\">댓글 내용:</label>\n");
      out.write("        <textarea id=\"content\" namecontent\" required></textarea><br><br>\n");
      out.write("        <button type=\"submit\">댓글 등록</button>\n");
      out.write("    </form>\n");
      out.write("    <div id=\"result\"></div>\n");
      out.write("\n");
      out.write("    <script>\n");
      out.write("        // 로그인\n");
      out.write("        $(document).ready(function () {\n");
      out.write("            $(\"#loginForm\").submit(function (event) {\n");
      out.write("                event.preventDefault();\n");
      out.write("                var username = $(\"#username\").val();\n");
      out.write("                var password = $(\"#password\").val();\n");
      out.write("\n");
      out.write("                $.ajax({\n");
      out.write("                    url: \"/api/login\",\n");
      out.write("                    type: \"POST\",\n");
      out.write("                    contentType: \"application/json\",\n");
      out.write("                    data: JSON.stringify({username: username, password: password}),\n");
      out.write("                    success: function (response) {\n");
      out.write("                        $(\"#loginResult\").html(response);\n");
      out.write("                    },\n");
      out.write("                    error: function (jqXHR, textStatus, errorThrown) {\n");
      out.write("                        $(\"#loginResult\").html(\"오류 발생: \" + textStatus + \", \" + errorThrown);\n");
      out.write("                    }\n");
      out.write("                });\n");
      out.write("            });\n");
      out.write("        });\n");
      out.write("\n");
      out.write("        // 회원가입\n");
      out.write("        $(document).ready(function () {\n");
      out.write("            $(\"#signupForm\").submit(function (event) {\n");
      out.write("                event.preventDefault();\n");
      out.write("                var signupUsername = $(\"#signupUsername\").val();\n");
      out.write("                var signupPassword = $(\"#signupPassword\").val();\n");
      out.write("\n");
      out.write("                $.ajax({\n");
      out.write("                    url: \"/api/signup\",\n");
      out.write("                    type: \"POST\",\n");
      out.write("                    contentType: \"application/json\",\n");
      out.write("                    data: JSON.stringify({username: signupUsername, password: signupPassword}),\n");
      out.write("                    success: function (response) {\n");
      out.write("                        $(\"#signupResult\").html(response);\n");
      out.write("                    },\n");
      out.write("                    error: function (jqXHR, textStatus, errorThrown) {\n");
      out.write("                        $(\"#signupResult\").html(\"오류 발생: \" + textStatus + \", \" + errorThrown);\n");
      out.write("                    }\n");
      out.write("                });\n");
      out.write("            });\n");
      out.write("        });\n");
      out.write("\n");
      out.write("        // 댓글 등록\n");
      out.write("        $(document).ready(function () {\n");
      out.write("            $(\"#commentForm\").submit(function (event) {\n");
      out.write("                event.preventDefault();\n");
      out.write("                var boardId = $(\"#boardId\").val();\n");
      out.write("                var content = $(\"#content\").val();\n");
      out.write("\n");
      out.write("                $.ajax({\n");
      out.write("                    url: \"/app/boards/\" + boardId + \"/comments\",\n");
      out.write("                    type: \"POST\",\n");
      out.write("                    contentType: \"application/json\",\n");
      out.write("                    data: JSON.stringify({content: content}),\n");
      out.write("                    success: function (response) {\n");
      out.write("                        $(\"#result\").html(response);\n");
      out.write("                    },\n");
      out.write("                    error: function (jqXHR, textStatus, errorThrown) {\n");
      out.write("                        $(\"#result\").html(\"오류 발생: \" + textStatus + \", \" + errorThrown);\n");
      out.write("                    }\n");
      out.write("                });\n");
      out.write("            });\n");
      out.write("        });\n");
      out.write("    </script>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
